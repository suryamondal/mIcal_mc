//
// File generated by rootcint at Tue Dec 31 10:35:10 2019

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIsrcdIHitsdict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "Hitsdict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void Hits_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Hits(void *p = 0);
   static void *newArray_Hits(Long_t size, void *p);
   static void delete_Hits(void *p);
   static void deleteArray_Hits(void *p);
   static void destruct_Hits(void *p);
   static void streamer_Hits(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Hits*)
   {
      ::Hits *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Hits >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Hits", ::Hits::Class_Version(), "./Hits.h", 38,
                  typeid(::Hits), DefineBehavior(ptr, ptr),
                  &::Hits::Dictionary, isa_proxy, 0,
                  sizeof(::Hits) );
      instance.SetNew(&new_Hits);
      instance.SetNewArray(&newArray_Hits);
      instance.SetDelete(&delete_Hits);
      instance.SetDeleteArray(&deleteArray_Hits);
      instance.SetDestructor(&destruct_Hits);
      instance.SetStreamerFunc(&streamer_Hits);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Hits*)
   {
      return GenerateInitInstanceLocal((::Hits*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Hits*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *Hits::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Hits::Class_Name()
{
   return "Hits";
}

//______________________________________________________________________________
const char *Hits::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Hits*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Hits::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Hits*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Hits::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Hits*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Hits::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Hits*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void Hits::Streamer(TBuffer &R__b)
{
   // Stream an object of class Hits.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> ENum;
      R__b >> NEle;
      R__b >> NHits;
      R__b >> NPrimHits;
      R__b >> NClus;
      R__b >> NTrips;
      R__b >> NFitUp;
      R__b >> NFitDown;
      R__b >> NFinders;
      R__b >> NParticles;
      R__b >> NRecTracks;
      R__b >> NShowerHits;
      fLastHit.Streamer(R__b);
      fHits->Streamer(R__b);
      R__b >> fIsValid;
      R__b.CheckByteCount(R__s, R__c, Hits::IsA());
   } else {
      R__c = R__b.WriteVersion(Hits::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << ENum;
      R__b << NEle;
      R__b << NHits;
      R__b << NPrimHits;
      R__b << NClus;
      R__b << NTrips;
      R__b << NFitUp;
      R__b << NFitDown;
      R__b << NFinders;
      R__b << NParticles;
      R__b << NRecTracks;
      R__b << NShowerHits;
      fLastHit.Streamer(R__b);
      fHits->Streamer(R__b);
      R__b << fIsValid;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Hits::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Hits.
      TClass *R__cl = ::Hits::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ENum", &ENum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEle", &NEle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NHits", &NHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NPrimHits", &NPrimHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NClus", &NClus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NTrips", &NTrips);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NFitUp", &NFitUp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NFitDown", &NFitDown);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NFinders", &NFinders);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NParticles", &NParticles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NRecTracks", &NRecTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NShowerHits", &NShowerHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLastHit", &fLastHit);
      R__insp.InspectMember(fLastHit, "fLastHit.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHits", &fHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsValid", &fIsValid);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Hits(void *p) {
      return  p ? new(p) ::Hits : new ::Hits;
   }
   static void *newArray_Hits(Long_t nElements, void *p) {
      return p ? new(p) ::Hits[nElements] : new ::Hits[nElements];
   }
   // Wrapper around operator delete
   static void delete_Hits(void *p) {
      delete ((::Hits*)p);
   }
   static void deleteArray_Hits(void *p) {
      delete [] ((::Hits*)p);
   }
   static void destruct_Hits(void *p) {
      typedef ::Hits current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Hits(TBuffer &buf, void *obj) {
      ((::Hits*)obj)->::Hits::Streamer(buf);
   }
} // end of namespace ROOT for class ::Hits

/********************************************************
* ../src/Hitsdict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableHitsdict();

extern "C" void G__set_cpp_environmentHitsdict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("Hits.h");
  G__cpp_reset_tagtableHitsdict();
}
#include <new>
extern "C" int G__cpp_dllrevHitsdict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Hits */
static int G__Hitsdict_234_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Hits* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Hits[n];
     } else {
       p = new((void*) gvp) Hits[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Hits;
     } else {
       p = new((void*) gvp) Hits;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HitsdictLN_Hits));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Hitsdict_234_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((Hits*) G__getstructoffset())->AddHits((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((Hits*) G__getstructoffset())->AddHits((Float_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Hitsdict_234_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Hits*) G__getstructoffset())->ClearTracks();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Hitsdict_234_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Hits*) G__getstructoffset())->GetHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Hitsdict_234_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Hits::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Hitsdict_234_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Hits::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Hitsdict_234_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Hits::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Hitsdict_234_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Hits::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Hitsdict_234_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Hits*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Hitsdict_234_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Hits::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Hitsdict_234_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Hits::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Hitsdict_234_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Hits::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Hitsdict_234_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Hits::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Hitsdict_234_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Hits* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Hits(*(Hits*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__HitsdictLN_Hits));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Hits G__THits;
static int G__Hitsdict_234_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Hits*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Hits*) (soff+(sizeof(Hits)*i)))->~G__THits();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Hits*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Hits*) (soff))->~G__THits();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Hitsdict_234_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Hits* dest = (Hits*) G__getstructoffset();
   *dest = *(Hits*) libp->para[0].ref;
   const Hits& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Hits */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncHitsdict {
 public:
  G__Sizep2memfuncHitsdict(): p(&G__Sizep2memfuncHitsdict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncHitsdict::*p)();
};

size_t G__get_sizep2memfuncHitsdict()
{
  G__Sizep2memfuncHitsdict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceHitsdict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__HitsdictLN_Hits))) {
     Hits *G__Lderived;
     G__Lderived=(Hits*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__HitsdictLN_Hits),G__get_linked_tagnum(&G__HitsdictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableHitsdict() {

   /* Setting up typedef entry */
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__HitsdictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HitsdictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HitsdictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HitsdictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HitsdictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__HitsdictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__HitsdictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HitsdictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__HitsdictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__HitsdictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__HitsdictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__HitsdictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__HitsdictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__HitsdictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__HitsdictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__HitsdictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__HitsdictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Hits */
static void G__setup_memvarHits(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__HitsdictLN_Hits));
   { Hits *p; p=(Hits*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ENum)-(long)(p)),105,0,0,-1,-1,-1,1,"ENum=",0,"Event Number");
   G__memvar_setup((void*)((long)(&p->NEle)-(long)(p)),105,0,0,-1,-1,-1,1,"NEle=",0,"Number of HitPos Objects (i.e NHits+NClus+NTrips+Ntracs)");
   G__memvar_setup((void*)((long)(&p->NHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NHits=",0,"Number of Hits not sets!");
   G__memvar_setup((void*)((long)(&p->NPrimHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NPrimHits=",0,"Number of Primary hits sets //max 10  added on Dec7");
   G__memvar_setup((void*)((long)(&p->NClus)-(long)(p)),105,0,0,-1,-1,-1,1,"NClus=",0,"Number of Clusters sets");
   G__memvar_setup((void*)((long)(&p->NTrips)-(long)(p)),105,0,0,-1,-1,-1,1,"NTrips=",0,"Number of Triplets sets");
   G__memvar_setup((void*)((long)(&p->NFitUp)-(long)(p)),105,0,0,-1,-1,-1,1,"NFitUp=",0,"Number of Fit up sets");
   G__memvar_setup((void*)((long)(&p->NFitDown)-(long)(p)),105,0,0,-1,-1,-1,1,"NFitDown=",0,"Number of Fit up sets");
   G__memvar_setup((void*)((long)(&p->NFinders)-(long)(p)),105,0,0,-1,-1,-1,1,"NFinders=",0,"Number of Finder sets   ");
   G__memvar_setup((void*)((long)(&p->NParticles)-(long)(p)),105,0,0,-1,-1,-1,1,"NParticles=",0,"Number of Particles");
   G__memvar_setup((void*)((long)(&p->NRecTracks)-(long)(p)),105,0,0,-1,-1,-1,1,"NRecTracks=",0,"Number of Reconstructed Tracks ");
   G__memvar_setup((void*)((long)(&p->NShowerHits)-(long)(p)),105,0,0,-1,-1,-1,1,"NShowerHits=",0,"Number of Shower Hits");
   G__memvar_setup((void*)((long)(&p->fLastHit)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__HitsdictLN_TRef),-1,-1,1,"fLastHit=",0,"reference pointer to last Hit/Cluster/Trip or track");
   G__memvar_setup((void*)((long)(&p->fHits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__HitsdictLN_TClonesArray),-1,-1,1,"fHits=",0,"->array with all Hits");
   G__memvar_setup((void*)(&Hits::fgHits),85,0,0,G__get_linked_tagnum(&G__HitsdictLN_TClonesArray),-1,-2,1,"fgHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fIsValid)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fIsValid=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__HitsdictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarHitsdict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncHits(void) {
   /* Hits */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__HitsdictLN_Hits));
   G__memfunc_setup("Hits",408,G__Hitsdict_234_0_1, 105, G__get_linked_tagnum(&G__HitsdictLN_Hits), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddHits",673,G__Hitsdict_234_0_2, 85, G__get_linked_tagnum(&G__HitsdictLN_HitPos), -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - random f - 'Float_t' 0 '1' ptmin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearTracks",1103,G__Hitsdict_234_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", "clears previous track objects..", (void*) NULL, 0);
   G__memfunc_setup("GetHits",696,G__Hitsdict_234_0_4, 85, G__get_linked_tagnum(&G__HitsdictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Hitsdict_234_0_5, 85, G__get_linked_tagnum(&G__HitsdictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Hits::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Hitsdict_234_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Hits::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Hitsdict_234_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Hits::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Hitsdict_234_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Hits::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__HitsdictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Hitsdict_234_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Hitsdict_234_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Hits::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Hitsdict_234_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Hits::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Hitsdict_234_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Hits::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Hitsdict_234_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Hits::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Hits", 408, G__Hitsdict_234_0_17, (int) ('i'), G__get_linked_tagnum(&G__HitsdictLN_Hits), -1, 0, 1, 1, 1, 0, "u 'Hits' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Hits", 534, G__Hitsdict_234_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Hitsdict_234_0_19, (int) ('u'), G__get_linked_tagnum(&G__HitsdictLN_Hits), -1, 1, 1, 1, 1, 0, "u 'Hits' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncHitsdict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalHitsdict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcHitsdict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__HitsdictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__HitsdictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__HitsdictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__HitsdictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__HitsdictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__HitsdictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__HitsdictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__HitsdictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__HitsdictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__HitsdictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__HitsdictLN_TRef = { "TRef" , 99 , -1 };
G__linked_taginfo G__HitsdictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__HitsdictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__HitsdictLN_HitPos = { "HitPos" , 99 , -1 };
G__linked_taginfo G__HitsdictLN_Hits = { "Hits" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableHitsdict() {
  G__HitsdictLN_TClass.tagnum = -1 ;
  G__HitsdictLN_TBuffer.tagnum = -1 ;
  G__HitsdictLN_TMemberInspector.tagnum = -1 ;
  G__HitsdictLN_TObject.tagnum = -1 ;
  G__HitsdictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__HitsdictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HitsdictLN_TClonesArray.tagnum = -1 ;
  G__HitsdictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__HitsdictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__HitsdictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__HitsdictLN_TRef.tagnum = -1 ;
  G__HitsdictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__HitsdictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__HitsdictLN_HitPos.tagnum = -1 ;
  G__HitsdictLN_Hits.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableHitsdict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__HitsdictLN_TClass);
   G__get_linked_tagnum_fwd(&G__HitsdictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__HitsdictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__HitsdictLN_TObject);
   G__get_linked_tagnum_fwd(&G__HitsdictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__HitsdictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__HitsdictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__HitsdictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__HitsdictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__HitsdictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__HitsdictLN_TRef);
   G__get_linked_tagnum_fwd(&G__HitsdictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__HitsdictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__HitsdictLN_HitPos);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__HitsdictLN_Hits),sizeof(Hits),-1,29952,"Event structure ",G__setup_memvarHits,G__setup_memfuncHits);
}
extern "C" void G__cpp_setupHitsdict(void) {
  G__check_setup_version(30051515,"G__cpp_setupHitsdict()");
  G__set_cpp_environmentHitsdict();
  G__cpp_setup_tagtableHitsdict();

  G__cpp_setup_inheritanceHitsdict();

  G__cpp_setup_typetableHitsdict();

  G__cpp_setup_memvarHitsdict();

  G__cpp_setup_memfuncHitsdict();
  G__cpp_setup_globalHitsdict();
  G__cpp_setup_funcHitsdict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncHitsdict();
  return;
}
class G__cpp_setup_initHitsdict {
  public:
    G__cpp_setup_initHitsdict() { G__add_setup_func("Hitsdict",(G__incsetup)(&G__cpp_setupHitsdict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initHitsdict() { G__remove_setup_func("Hitsdict"); }
};
G__cpp_setup_initHitsdict G__cpp_setup_initializerHitsdict;

